name: Test Xcode versions
on:
  push:
    paths:
      - .github/workflows/xcode.yml

jobs:
  xcode:
    runs-on: macos-${{ matrix.macos-version }}
    strategy:
      fail-fast: false
      matrix:
        macos-version: [13, 14]
        xcode-version: ['15.4', '15.3', '15.2', '15.1', '15.0.1', '14.3.1', '14.2', '14.1']
        include:
          - macos-version: 15
            xcode-version: '16'
          - macos-version: 14
            xcode-version: '16'
          - macos-version: 12
            xcode-version: '14.2'
          - macos-version: 12
            xcode-version: '14.1'
          - macos-version: 12
            xcode-version: '14.0.1'
          - macos-version: 12
            xcode-version: '13.4.1'
          - macos-version: 12
            xcode-version: '13.3.1'
          - macos-version: 12
            xcode-version: '13.2.1'
          - macos-version: 12
            xcode-version: '13.1'
        exclude:
          - macos-version: 14
            xcode-version: '14.2'
          - macos-version: 14
            xcode-version: '14.1'
          - macos-version: 13
            xcode-version: '15.4'
          - macos-version: 13
            xcode-version: '15.3'
    steps:
      - name: Switch Xcode version
        env:
          XCODE_VERSION: ${{ matrix.xcode-version }}
        run: sudo xcode-select --switch "/Applications/Xcode_${XCODE_VERSION}.app/Contents/Developer"

      - name: Build LuaJIT
        env:
          LUAJIT_REVISION: 2240d84464cc3dcb22fd976f1db162b36b5b52d5
        run: |
          git clone https://github.com/LuaJIT/LuaJIT.git
          pushd LuaJIT
          git checkout "${LUAJIT_REVISION}"
          cat <<'PATCH' | patch -p1
          --- a/src/host/buildvm_asm.c
          +++ b/src/host/buildvm_asm.c
          @@ -339,6 +339,10 @@ void emit_asm(BuildCtx *ctx)
               fprintf(ctx->fp, "\t.ident \"%s\"\n", ctx->dasm_ident);
               break;
             case BUILD_machasm:
          +#if defined(__apple_build_version__) && __apple_build_version__ >= 15000000 && __apple_build_version__ < 15000300
          +    /* Workaround for XCode 15.0 - 15.2. */
          +    fprintf(ctx->fp, "\t.subsections_via_symbols\n");
          +#endif
               fprintf(ctx->fp,
                 "\t.cstring\n"
                 "\t.ascii \"%s\\0\"\n", ctx->dasm_ident);
          PATCH
          export MACOSX_DEPLOYMENT_TARGET="$(sw_vers -productVersion | cut -f1 -d. | tr -d '\n')"
          make -j
          ./src/luajit -v
          popd

      - name: Build LPeg
        run: |
          curl -kL "http://www.inf.puc-rio.br/~roberto/lpeg/lpeg-1.1.0.tar.gz" | tar x
          make -C lpeg-1.1.0 LUADIR="$PWD/LuaJIT/src" macosx -j

      - name: Test LPeg
        id: lpeg
        run: |
          cd lpeg-1.1.0
          ../LuaJIT/src/luajit test.lua

      - name: Show version information
        if: always()
        env:
          MACOS_VERSION: ${{ matrix.macos-version }}
          XCODE_VERSION: ${{ matrix.xcode-version }}
          RESULT: ${{ steps.lpeg.conclusion }}
        run: |
          printf '## Toolchain version on macOS %s with Xcode %s\n' "${MACOS_VERSION}" "${XCODE_VERSION}" | tee -a "${GITHUB_STEP_SUMMARY}"
          printf '```\n' >>"${GITHUB_STEP_SUMMARY}"
          echo | clang -dM -E - | grep __apple_build_version__ | tee -a "${GITHUB_STEP_SUMMARY}"
          printf '```\n' >>"${GITHUB_STEP_SUMMARY}"
          printf 'Result: %s\n' "${RESULT}" | tee -a "${GITHUB_STEP_SUMMARY}"
