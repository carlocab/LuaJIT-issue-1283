name: Test Xcode versions
on:
  push:
    paths:
      - .github/workflows/xcode.yml

jobs:
  xcode:
    runs-on: macos-${{ matrix.macos-version }}
    strategy:
      fail-fast: false
      matrix:
        macos-version: [13, 14]
        xcode-version: ['15.4', '15.3', '15.2', '15.1', '15.0.1', '14.3.1', '14.2', '14.1']
        include:
          - macos-version: 15
            xcode-version: '16'
          - macos-version: 14
            xcode-version: '16'
          - macos-version: 12
            xcode-version: '14.2'
          - macos-version: 12
            xcode-version: '14.1'
          - macos-version: 12
            xcode-version: '14.0.1'
          - macos-version: 12
            xcode-version: '13.4.1'
          - macos-version: 12
            xcode-version: '13.3.1'
          - macos-version: 12
            xcode-version: '13.2.1'
          - macos-version: 12
            xcode-version: '13.1'
        exclude:
          - macos-version: 14
            xcode-version: '14.2'
          - macos-version: 14
            xcode-version: '14.1'
          - macos-version: 13
            xcode-version: '15.4'
          - macos-version: 13
            xcode-version: '15.3'
    steps:
      - name: Switch Xcode version
        env:
          XCODE_VERSION: ${{ matrix.xcode-version }}
        run: sudo xcode-select --switch "/Applications/Xcode_${XCODE_VERSION}.app/Contents/Developer"

      - name: Build LuaJIT
        env:
          LDFLAGS: ${{ matrix.ld_classic && '-Wl,-ld_classic' || '' }}
        run: |
          git clone https://github.com/LuaJIT/LuaJIT.git
          git -C LuaJIT checkout 2240d84464cc3dcb22fd976f1db162b36b5b52d5
          export MACOSX_DEPLOYMENT_TARGET="$(sw_vers -productVersion | cut -f1 -d. | tr -d '\n')"
          make -C LuaJIT Q= E=@: -j
          ./LuaJIT/src/luajit -v

      - name: Build LPeg
        run: |
          curl -kL "http://www.inf.puc-rio.br/~roberto/lpeg/lpeg-1.1.0.tar.gz" | tar x
          make -C lpeg-1.1.0 LUADIR="$PWD/LuaJIT/src" macosx -j

      - name: Test LPeg
        id: lpeg
        run: |
          cd lpeg-1.1.0
          ../LuaJIT/src/luajit test.lua

      - name: Show version information
        if: always()
        env:
          MACOS_VERSION: ${{ matrix.macos-version }}
          XCODE_VERSION: ${{ matrix.xcode-version }}
          RESULT: ${{ steps.lpeg.conclusion }}
        run: |
          printf '## Toolchain version on macOS %s with Xcode %s\n' "${MACOS_VERSION}" "${XCODE_VERSION}" | tee -a "${GITHUB_STEP_SUMMARY}"
          printf '```\n' >>"${GITHUB_STEP_SUMMARY}"
          echo | clang -dM -E - | grep __apple_build_version__ | tee -a "${GITHUB_STEP_SUMMARY}"
          printf '```\n' >>"${GITHUB_STEP_SUMMARY}"
          printf 'Result: %s\n' "${RESULT}" | tee -a "${GITHUB_STEP_SUMMARY}"

          echo | clang -dM -E - | grep __apple_build_version__ >"${RESULT}-${MACOS_VERSION}-${XCODE_VERSION}.txt"

      - name: Upload result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: result-${{ matrix.macos-version }}-${{ matrix.xcode-version }}
          path: '*.txt'

  compile-results:
    runs-on: ubuntu-latest
    needs: xcode
    if: always()
    steps:
      - name: Download results
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Combine results
        run:
          printf '## Failures\n' | tee -a "${GITHUB_STEP_SUMMARY}"
          printf '```\n' >>"${GITHUB_STEP_SUMMARY}"
          cat failure-*.txt | sort | tee -a "${GITHUB_STEP_SUMMARY}"
          printf '```\n' >>"${GITHUB_STEP_SUMMARY}"

          printf '## Successes\n' | tee -a "${GITHUB_STEP_SUMMARY}"
          printf '```\n' >>"${GITHUB_STEP_SUMMARY}"
          cat success-*.txt | sort | tee -a "${GITHUB_STEP_SUMMARY}"
          printf '```\n' >>"${GITHUB_STEP_SUMMARY}"


